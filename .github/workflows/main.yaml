name: main

on:
  push:
    branches:
      - 'master'
  schedule:
    - cron: "0 7 * * 1" # monday morning, after dependabot
  pull_request:
  repository_dispatch:

permissions: write-all

jobs:
  concurrency:
    name: wait for other concurrent workflows
    runs-on: ubuntu-latest
    steps:
    - 
      uses: actions/checkout@v3
    - 
      uses: ahmadnassri/action-workflow-queue@v1
  test:
    name: Integration tests
    runs-on: ubuntu-latest
    needs: concurrency
    steps:
    - 
      uses: actions/checkout@v3
      with:
        ref: ${{github.ref_name}}
        submodules: recursive
    -
      if: ${{ github.event_name == 'repository_dispatch' }}
      name: Update submodule ${{ github.event.client_payload.submodule }} to ${{ github.event.client_payload.commit_sha }}
      # "submodule": "${{ github.event.repository.name }}",
      #     "commit_sha": "${{ github.sha }}"
      #     "docker_image": "${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:${{ env.TODAY }}",
      run: |
        pushd ${{ github.event.client_payload.submodule }}
        git fetch
        git checkout ${{ github.event.client_payload.commit_sha }}
        # git config pull.rebase false
        # git pull
        popd
    - 
      if: ${{ github.event_name == 'repository_dispatch' }}
      name: add and commit changes for ${{ github.event.client_payload.submodule }}
      uses: EndBug/add-and-commit@v9
      with:
        # The arguments for the `git add` command (see the paragraph below for more info)
        # Default: '.'
        add: '${{ github.event.client_payload.submodule }}'
        # Additional arguments for the git commit command. The --message argument is already set by the message input.
        # Default: ''
        commit: --signoff

        # Determines the way the action fills missing author name and email. Three options are available:
        # - github_actor -> UserName <UserName@users.noreply.github.com>
        # - user_info -> Your Display Name <your-actual@email.com>
        # - github_actions -> github-actions <email associated with the github logo>
        # Default: github_actor
        default_author: github_actor

        # The message for the commit.
        # Default: 'Commit from GitHub Actions (name of the workflow)'
        message: '[automatic] updated submodule ${{ github.event.client_payload.submodule }} to ${{ github.event.client_payload.commit_sha }}'

        # The way the action should handle pathspec errors from the add and remove commands. Three options are available:
        # - ignore -> errors will be logged but the step won't fail
        # - exitImmediately -> the action will stop right away, and the step will fail
        # - exitAtEnd -> the action will go on, every pathspec error will be logged at the end, the step will fail.
        # Default: ignore
        pathspec_error_handling: ignore
    - 
      if: ${{ github.event_name != 'repository_dispatch' }}
      name: Instantiate with docker stable
      run: COMMAND=start.web bash scripts/main.sh
    - 
      if: ${{ github.event_name == 'repository_dispatch' }}
      name: Instantiate with docker with dev ${{ github.event.client_payload.repository }}
      run: COMMAND=start.web bash scripts/main.sh -d ${{ github.event.client_payload.repository }}
    - 
      name: Test
      run: echo TODO
    - 
      if: ${{ github.event_name == 'repository_dispatch' && github.ref_name == 'master' && github.event.client_payload.repository != 'misinfome-frontend' }}
      name: retag docker images of submodules
      run: |
        docker container run -i --rm --net host -v regctl-conf:/home/appuser/.regctl/ ghcr.io/regclient/regctl:latest registry login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
        docker container run -i --rm --net host -v regctl-conf:/home/appuser/.regctl/ ghcr.io/regclient/regctl:latest image copy ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.client_payload.repository }}:dev ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.client_payload.repository }}:latest
  docker:
    name: Build docker image
    runs-on: ubuntu-latest
    needs: test
    if: github.ref_name == 'master'
    steps:
    -
      name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{github.ref_name}}
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - 
      name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - 
      name: Get current date # for tagging the image, can go back in time if latest is problematic
      id: date
      run: echo "TODAY=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
    -
      name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        platforms: linux/amd64
        file: ./Dockerfile
        push: true
        provenance: false # needed on KMi servers with old docker, for the manifest
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:latest, ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:${{ env.TODAY }}
